{"version":3,"sources":["components/FormAddUser/FormAddUser.jsx","components/User/User.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","button","FormAddUser","setUserList","userList","setViewAddUserForm","useState","length","id","userId","setuserId","classes","onSubmit","event","formData","FormData","target","JSON","parse","localStorage","getItem","userObj","preventDefault","entries","entry","push","setItem","stringify","className","type","name","value","Date","toLocaleDateString","toLocaleTimeString","InputLabel","htmlFor","TextField","variant","placeholder","required","Select","MenuItem","Button","color","endIcon","Icon","minWidth","maxWidth","marginBottom","editMode","bullet","display","transform","title","fontSize","pos","buttonSave","User","username","email","status","telephone","dateCreate","dateEdit","setEditMode","Card","CardContent","Typography","onClick","users","forEach","user","index","splice","e","defaultValue","startIcon","flexGrow","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","alignItems","justifyContent","zIndex","inputRoot","inputInput","paddingLeft","paddingRight","transition","transitions","create","textOverflow","selectEmpty","marginTop","formControl","btnAddUser","borderColor","btnDemo","App","getUserList","viewAddUserForm","React","setStatus","fakeStatus","createFakeUser","randomEmail","faker","internet","randomUserName","findName","randomPhone","phone","phoneNumber","randomPassword","password","Math","floor","random","AppBar","Toolbar","noWrap","document","getElementById","usersSearch","filter","InputBase","input","inputProps","FormControl","labelId","onChange","statusValue","usersFilter","label","FormHelperText","size","idNewFakeUser","fakeUserList","i","newFakeUser","concat","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.98eda013.chunk.js","sourcesContent":["import { InputLabel, TextField, Select, Button, MenuItem, Icon } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport './form-style.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      '& > *': {\r\n         margin: theme.spacing(1),\r\n         width: '90%',\r\n      },\r\n   },\r\n   button: {\r\n      margin: theme.spacing(1),\r\n   },\r\n}));\r\n\r\nexport default function FormAddUser({ setUserList, userList, setViewAddUserForm }) {\r\n\r\n   const [userId, setuserId] = useState(userList.length ? +userList[userList.length - 1].id + 1 : 0)\r\n\r\n   function handleSubmit(event) {\r\n      const formData = new FormData(event.target)\r\n      const userList = JSON.parse(localStorage.getItem('users') || '[]')\r\n      const userObj = {}\r\n      event.preventDefault()\r\n      for (let entry of formData.entries()) {\r\n         if (entry[0] === 'id' && userId === 0) {\r\n            setuserId(userId + 1)\r\n         }\r\n         userObj[entry[0]] = entry[1]\r\n         setuserId(userId + 1)\r\n      }\r\n      userList.push(userObj)\r\n      localStorage.setItem(\"users\", JSON.stringify(userList))\r\n      setUserList(userList)\r\n      setViewAddUserForm()\r\n   }\r\n\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit} className={`add-user-form ${classes.root}`}>\r\n\r\n         <input type=\"hidden\" name=\"id\" value={userId} />\r\n         <input type=\"hidden\" name=\"dateCreate\" value={new Date().toLocaleDateString() + ' ' + new Date().toLocaleTimeString()} />\r\n         <input type=\"hidden\" name=\"dateEdit\" value={new Date().toLocaleDateString() + ' ' + new Date().toLocaleTimeString()} />\r\n\r\n         <InputLabel htmlFor=\"username\">Введите ФИО:</InputLabel>\r\n         <TextField variant=\"outlined\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            placeholder='ФИО'\r\n            type=\"text\"\r\n            required />\r\n\r\n         <InputLabel htmlFor=\"email\"> Введите email: </InputLabel>\r\n         <TextField id=\"email\"\r\n            placeholder='Email'\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            required />\r\n\r\n         <InputLabel htmlFor=\"password\"> Введите пароль: </InputLabel>\r\n         <TextField id=\"password\" placeholder='Пароль'\r\n            variant=\"outlined\" name=\"password\" type=\"password\" required />\r\n\r\n         <InputLabel htmlFor=\"telephone\"> Введите номер телефона: </InputLabel>\r\n         <TextField id=\"telephone\" variant=\"outlined\" name=\"telephone\" type=\"tel\" placeholder=\"+7(999) 999-9999\" required />\r\n\r\n         <InputLabel> Выберите статус: </InputLabel>\r\n         <Select name=\"status\" required>\r\n            <MenuItem value=\"client\">Клиент</MenuItem>\r\n            <MenuItem value=\"admin\">Администратор</MenuItem>\r\n            <MenuItem value=\"partner\">Партнер</MenuItem>\r\n         </Select>\r\n         <br />\r\n         <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            endIcon={<Icon>send</Icon>}\r\n            type=\"submit\"\r\n         >\r\n            Send\r\n         </Button>\r\n      </form >\r\n   )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './user-style.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      margin: \"10px\",\r\n      minWidth: 275,\r\n      maxWidth: 375,\r\n      marginBottom: 20,\r\n   },\r\n   editMode: {\r\n      '& > *': {\r\n         margin: theme.spacing(1),\r\n         width: '90%',\r\n      },\r\n   },\r\n   bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n   },\r\n   title: {\r\n      fontSize: 14,\r\n   },\r\n   pos: {\r\n      marginBottom: 12,\r\n   },\r\n   button: {\r\n      margin: '20px 0 0',\r\n   },\r\n   buttonSave: {\r\n      margin: theme.spacing(1),\r\n   },\r\n}));\r\n\r\nexport default function User({ username, email, status, telephone, id, dateCreate, dateEdit, setUserList }) {\r\n   const [editMode, setEditMode] = useState(false)\r\n\r\n   const updateUserInfo = (e) => {\r\n      const formData = new FormData(e.target)\r\n      const userList = JSON.parse(localStorage.getItem('users') || '[]')\r\n      e.preventDefault()\r\n      userList.forEach(user => {\r\n         if (id === user.id) {\r\n            for (let entry of formData.entries()) {\r\n               user[entry[0]] = entry[1]\r\n            }\r\n         }\r\n      })\r\n      localStorage.setItem(\"users\", JSON.stringify(userList))\r\n      setUserList(userList)\r\n      setEditMode(false)\r\n   }\r\n\r\n   const removeUser = () => {\r\n      const users = JSON.parse(localStorage.getItem('users') || '[]')\r\n      users.forEach((user, index) => {\r\n         if (id === user.id) {\r\n            users.splice(index, 1)\r\n         }\r\n      });\r\n      localStorage.setItem(\"users\", JSON.stringify(users))\r\n      setUserList(users)\r\n   }\r\n\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Card className='user-cart' >\r\n         <CardContent>\r\n            {!editMode &&\r\n               <>\r\n                  <Typography >ФИО: {username}</Typography>\r\n                  <Typography >Email: {email}</Typography>\r\n                  <Typography >Статус: {status}</Typography>\r\n                  <Typography >Телефон: {telephone}</Typography>\r\n                  <Typography >Дата создания: {dateCreate}</Typography>\r\n                  <Typography >Последнее изменение: {dateEdit}</Typography>\r\n                  <EditIcon className='edit-icon' onClick={() => setEditMode(true)} />\r\n                  <DeleteIcon className='delete-icon' onClick={removeUser} />\r\n               </>\r\n            }\r\n            {editMode &&\r\n               <form onSubmit={updateUserInfo} className={classes.editMode}>\r\n                  <input type=\"hidden\" name=\"dateEdit\" value={new Date().toLocaleDateString() + ' ' + new Date().toLocaleTimeString()} />\r\n                  <InputLabel htmlFor=\"username\">Изменить ФИО:</InputLabel>\r\n                  <TextField variant=\"outlined\"\r\n                     defaultValue={username}\r\n                     id=\"username\"\r\n                     name=\"username\"\r\n                     placeholder='ФИО'\r\n                     type=\"text\"\r\n                     required />\r\n                  <InputLabel htmlFor=\"email\">Изменить email:</InputLabel>\r\n                  <TextField id=\"email\"\r\n                     defaultValue={email}\r\n                     placeholder='Email'\r\n                     variant=\"outlined\"\r\n                     name=\"email\"\r\n                     type=\"email\"\r\n                     required />\r\n\r\n                  <InputLabel htmlFor=\"telephone\"> Изменить номер телефона: </InputLabel>\r\n                  <TextField id=\"telephone\"\r\n                     defaultValue={telephone}\r\n                     variant=\"outlined\"\r\n                     name=\"telephone\"\r\n                     type=\"tel\"\r\n                     placeholder=\"+7(999) 999-9999\"\r\n                     required />\r\n\r\n                  <InputLabel> Изменить статус: </InputLabel>\r\n                  <Select name=\"status\" defaultValue={status} required>\r\n                     <MenuItem value=\"client\">Клиент</MenuItem>\r\n                     <MenuItem value=\"admin\">Администратор</MenuItem>\r\n                     <MenuItem value=\"partner\">Партнер</MenuItem>\r\n                  </Select>\r\n                  <Button\r\n                     variant=\"contained\"\r\n                     color=\"primary\"\r\n                     className={classes.buttonSave}\r\n                     startIcon={<SaveIcon />}\r\n                     type='submit'\r\n                  >\r\n                     Save\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={() => setEditMode(false)}>Отмена</Button>\r\n               </form>\r\n            }\r\n         </CardContent>\r\n      </Card>\r\n   )\r\n}\r\n","import React, { useState } from 'react'\r\nimport FormAddUser from './components/FormAddUser/FormAddUser';\r\nimport User from './components/User/User';\r\nimport './App.css'\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { AppBar, Toolbar, Typography, InputBase, InputLabel, MenuItem, Select, FormControl, FormHelperText, Button } from '@material-ui/core';\r\nimport faker from 'faker/locale/ru'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      flexGrow: 1,\r\n      marginBottom: 10,\r\n   },\r\n   title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n         display: 'block',\r\n      },\r\n   },\r\n   search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n         backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n         marginLeft: theme.spacing(1),\r\n         width: 'auto',\r\n      },\r\n   },\r\n   searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 2,\r\n   },\r\n   inputRoot: {\r\n      color: 'inherit',\r\n   },\r\n   inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      paddingRight: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      textOverflow: 'ellipsis',\r\n      [theme.breakpoints.up('sm')]: {\r\n         width: '30ch',\r\n      },\r\n   },\r\n   selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n   btnAddUser: {\r\n      height: 55,\r\n      margin: theme.spacing(1),\r\n      backgroundColor: '#69f0ae',\r\n      borderColor: '#69f0ae',\r\n   },\r\n   btnDemo: {\r\n      height: 55,\r\n      margin: theme.spacing(1),\r\n   }\r\n}));\r\n\r\n\r\nfunction App() {\r\n   const getUserList = JSON.parse(localStorage.getItem('users') || '[]')\r\n   const [userList, setUserList] = useState(getUserList)\r\n   const [viewAddUserForm, setViewAddUserForm] = useState(false)\r\n   const [status, setStatus] = React.useState('');\r\n   const fakeStatus = ['client', 'partner', 'admin']\r\n\r\n   const createFakeUser = () => {\r\n      let randomEmail = faker.internet.email()\r\n      let randomUserName = faker.name.findName()\r\n      let randomPhone = faker.phone.phoneNumber()\r\n      let randomPassword = faker.internet.password()\r\n      let fakeUser = {\r\n         id: userList.length ? +userList[userList.length - 1].id + 1 : 0,\r\n         email: randomEmail,\r\n         status: fakeStatus[Math.floor(Math.random() * fakeStatus.length)],\r\n         dateCreate: new Date().toLocaleDateString() + ' ' + new Date().toLocaleTimeString(),\r\n         dateEdit: new Date().toLocaleDateString() + ' ' + new Date().toLocaleTimeString(),\r\n         password: randomPassword,\r\n         telephone: randomPhone,\r\n         username: randomUserName,\r\n      }\r\n      return fakeUser\r\n   }\r\n\r\n   const setFakeUsers = () => {\r\n      let idNewFakeUser = createFakeUser().id++\r\n      let fakeUserList = []\r\n      for (let i = 0; i < 100; i++) {\r\n         let newFakeUser = {\r\n            ...createFakeUser(),\r\n            id: idNewFakeUser++\r\n         }\r\n         fakeUserList.push(newFakeUser)\r\n      }\r\n      fakeUserList = userList.concat(fakeUserList)\r\n      localStorage.setItem(\"users\", JSON.stringify(fakeUserList))\r\n      setUserList(fakeUserList)\r\n   }\r\n\r\n   const filterByStatus = (e) => {\r\n      const statusValue = e.target.value\r\n      setStatus(statusValue);\r\n      if (statusValue !== 'all') {\r\n         const usersFilter = getUserList.filter(user => user.status === statusValue)\r\n         setUserList(usersFilter)\r\n      } else {\r\n         setUserList(getUserList)\r\n      }\r\n   }\r\n   const searchForEmailOrPhone = () => {\r\n      const search = document.getElementById('site-search')\r\n      if (search.value !== '') {\r\n         const usersSearch = getUserList.filter(user => search.value === user.email || search.value === user.telephone)\r\n         setUserList(usersSearch)\r\n      } else {\r\n         setUserList(getUserList)\r\n      }\r\n   }\r\n\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <>\r\n         <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n               <Toolbar>\r\n                  <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                     Admin panel\r\n                  </Typography>\r\n                  <div className={classes.search} >\r\n                     <div className={classes.searchIcon} onClick={searchForEmailOrPhone}>\r\n                        <SearchIcon />\r\n                     </div>\r\n                     <InputBase id=\"site-search\"\r\n                        placeholder=\"Поиск по email или телефону\"\r\n                        classes={{\r\n                           root: classes.inputRoot,\r\n                           input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                     />\r\n                  </div>\r\n               </Toolbar>\r\n            </AppBar>\r\n         </div>\r\n         <div className='top'>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n               <InputLabel id=\"demo-simple-select-outlined-label\">Статус</InputLabel>\r\n               <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={status}\r\n                  onChange={filterByStatus}\r\n                  label=\"Статус\"\r\n               >\r\n                  <MenuItem value=\"all\">Все</MenuItem>\r\n                  <MenuItem value='client'>Клиент</MenuItem>\r\n                  <MenuItem value='admin'>Администратор</MenuItem>\r\n                  <MenuItem value='partner'>Партнер</MenuItem>\r\n               </Select>\r\n               <FormHelperText>Отфильтровать по статусу</FormHelperText>\r\n            </FormControl>\r\n            <Button variant=\"outlined\"\r\n               className={classes.btnAddUser}\r\n               size=\"small\"\r\n               onClick={() => setViewAddUserForm(!viewAddUserForm)}>Добавить пользователя\r\n            </Button>\r\n            <Button\r\n               size=\"small\"\r\n               onClick={setFakeUsers}\r\n               className={classes.btnDemo}\r\n               variant=\"outlined\">Демо данные</Button>\r\n         </div>\r\n         <div className=\"form\">\r\n            {\r\n               viewAddUserForm && <FormAddUser\r\n                  userList={userList}\r\n                  setUserList={(users) => setUserList(users)}\r\n                  setViewAddUserForm={() => setViewAddUserForm(false)}\r\n               />\r\n            }\r\n         </div>\r\n         <div className='users-block'>\r\n            {\r\n               userList && userList.map(user => <User\r\n                  key={user.id}\r\n                  username={user.username}\r\n                  telephone={user.telephone}\r\n                  status={user.status}\r\n                  email={user.email}\r\n                  id={user.id}\r\n                  dateCreate={user.dateCreate}\r\n                  dateEdit={user.dateEdit}\r\n                  setUserList={(users) => setUserList(users)} />)\r\n            }\r\n         </div>\r\n      </>\r\n   );\r\n\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}