{"version":3,"sources":["components/FormAddUser/FormAddUser.jsx","components/User/User.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","button","FormAddUser","setUserList","userList","setViewAddUserForm","useState","length","id","userId","setuserId","classes","onSubmit","event","formData","FormData","target","JSON","parse","localStorage","getItem","userObj","preventDefault","entries","entry","push","setItem","stringify","className","type","name","value","Date","InputLabel","htmlFor","TextField","variant","placeholder","required","Select","MenuItem","Button","color","endIcon","Icon","minWidth","maxWidth","marginBottom","editMode","bullet","display","transform","title","fontSize","pos","buttonSave","User","username","email","status","telephone","setEditMode","Card","CardContent","Typography","onClick","users","forEach","user","index","splice","e","defaultValue","startIcon","flexGrow","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","alignItems","justifyContent","zIndex","inputRoot","inputInput","paddingLeft","paddingRight","transition","transitions","create","textOverflow","selectEmpty","marginTop","formControl","btnAddUser","App","getUserList","viewAddUserForm","React","setStatus","Container","AppBar","Toolbar","noWrap","document","getElementById","usersSearch","filter","InputBase","input","inputProps","FormControl","labelId","onChange","statusValue","usersFilter","label","FormHelperText","size","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.184a59e9.chunk.js","sourcesContent":["import { Input, InputLabel, TextField, Select, Button, MenuItem, Icon } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport './form-style.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      '& > *': {\r\n         margin: theme.spacing(1),\r\n         width: '90%',\r\n      },\r\n   },\r\n   button: {\r\n      margin: theme.spacing(1),\r\n   },\r\n}));\r\n\r\nexport default function FormAddUser({ setUserList, userList, setViewAddUserForm }) {\r\n\r\n   const [userId, setuserId] = useState(userList.length ? +userList[userList.length - 1].id + 1 : 0)\r\n\r\n   function handleSubmit(event) {\r\n      const formData = new FormData(event.target)\r\n      const userList = JSON.parse(localStorage.getItem('users') || '[]')\r\n      const userObj = {}\r\n      event.preventDefault()\r\n      for (let entry of formData.entries()) {\r\n         if (entry[0] === 'id' && userId === 0) {\r\n            setuserId(userId + 1)\r\n         }\r\n         userObj[entry[0]] = entry[1]\r\n         setuserId(userId + 1)\r\n      }\r\n      userList.push(userObj)\r\n      localStorage.setItem(\"users\", JSON.stringify(userList))\r\n      setUserList(userList)\r\n      setViewAddUserForm()\r\n   }\r\n\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit} className={`add-user-form ${classes.root}`}>\r\n\r\n         <input type=\"hidden\" name=\"id\" value={userId} />\r\n         <input type=\"hidden\" name=\"dateCrate\" value={new Date()} />\r\n\r\n         <InputLabel htmlFor=\"username\">Введите имя пользователя:</InputLabel>\r\n         <TextField variant=\"outlined\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            placeholder='Имя пользователя'\r\n            type=\"text\"\r\n            required />\r\n\r\n         <InputLabel htmlFor=\"email\"> Введите email: </InputLabel>\r\n         <TextField id=\"email\"\r\n            placeholder='Email'\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            required />\r\n\r\n         <InputLabel htmlFor=\"password\"> Введите пароль: </InputLabel>\r\n         <TextField id=\"password\" placeholder='Пароль'\r\n            variant=\"outlined\" name=\"password\" type=\"password\" required />\r\n\r\n         <InputLabel htmlFor=\"telephone\"> Введите номер телефона: </InputLabel>\r\n         <TextField id=\"telephone\" variant=\"outlined\" name=\"telephone\" type=\"tel\" placeholder=\"+7(999) 999-9999\" required />\r\n\r\n         <InputLabel> Выберите статус: </InputLabel>\r\n         <Select name=\"status\" required>\r\n            <MenuItem value=\"client\">Клиент</MenuItem>\r\n            <MenuItem value=\"admin\">Администратор</MenuItem>\r\n            <MenuItem value=\"partner\">Партнер</MenuItem>\r\n         </Select>\r\n         <br />\r\n         <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            endIcon={<Icon>send</Icon>}\r\n            type=\"submit\"\r\n         >\r\n            Send\r\n         </Button>\r\n      </form >\r\n   )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './user-style.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      minWidth: 275,\r\n      maxWidth: 375,\r\n      marginBottom: 20,\r\n   },\r\n   editMode: {\r\n      '& > *': {\r\n         margin: theme.spacing(1),\r\n         width: '90%',\r\n      },\r\n   },\r\n   bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n   },\r\n   title: {\r\n      fontSize: 14,\r\n   },\r\n   pos: {\r\n      marginBottom: 12,\r\n   },\r\n   button: {\r\n      margin: '20px 0 0',\r\n   },\r\n   buttonSave: {\r\n      margin: theme.spacing(1),\r\n   },\r\n}));\r\n\r\nexport default function User({ username, email, status, telephone, id, setUserList }) {\r\n   const [editMode, setEditMode] = useState(false)\r\n\r\n   const updateUserInfo = (e) => {\r\n      const formData = new FormData(e.target)\r\n      const userList = JSON.parse(localStorage.getItem('users') || '[]')\r\n      e.preventDefault()\r\n      userList.forEach(user => {\r\n         if (id === user.id) {\r\n            for (let entry of formData.entries()) {\r\n               user[entry[0]] = entry[1]\r\n            }\r\n         }\r\n      })\r\n      localStorage.setItem(\"users\", JSON.stringify(userList))\r\n      setUserList(userList)\r\n      setEditMode(false)\r\n\r\n   }\r\n\r\n   const removeUser = () => {\r\n      const users = JSON.parse(localStorage.getItem('users') || '[]')\r\n      users.forEach((user, index) => {\r\n         if (id === user.id) {\r\n            users.splice(index, 1)\r\n         }\r\n      });\r\n      localStorage.setItem(\"users\", JSON.stringify(users))\r\n      setUserList(users)\r\n   }\r\n\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Card className={classes.root} variant=\"outlined\">\r\n         <CardContent>\r\n            {!editMode &&\r\n               <>\r\n                  <Typography >Имя пользователя: {username}</Typography>\r\n                  <Typography >Email: {email}</Typography>\r\n                  <Typography >Статус: {status}</Typography>\r\n                  <Typography >Телефон: {telephone}</Typography>\r\n                  <EditIcon className='edit-icon' onClick={() => setEditMode(true)} />\r\n                  <DeleteIcon className='delete-icon' onClick={removeUser} />\r\n               </>\r\n            }\r\n            {editMode &&\r\n               <form onSubmit={updateUserInfo} className={classes.editMode}>\r\n                  <input type=\"hidden\" name=\"dateEdit\" value={new Date()} />\r\n                  <InputLabel htmlFor=\"username\">Введите имя пользователя:</InputLabel>\r\n                  <TextField variant=\"outlined\"\r\n                     defaultValue={username}\r\n                     id=\"username\"\r\n                     name=\"username\"\r\n                     placeholder='Имя пользователя'\r\n                     type=\"text\"\r\n                     required />\r\n                  <InputLabel htmlFor=\"email\"> Введите email: </InputLabel>\r\n                  <TextField id=\"email\"\r\n                     defaultValue={email}\r\n                     placeholder='Email'\r\n                     variant=\"outlined\"\r\n                     name=\"email\"\r\n                     type=\"email\"\r\n                     required />\r\n\r\n                  <InputLabel htmlFor=\"telephone\"> Введите номер телефона: </InputLabel>\r\n                  <TextField id=\"telephone\"\r\n                     defaultValue={telephone}\r\n                     variant=\"outlined\"\r\n                     name=\"telephone\"\r\n                     type=\"tel\"\r\n                     placeholder=\"+7(999) 999-9999\"\r\n                     required />\r\n\r\n                  <InputLabel> Выберите статус: </InputLabel>\r\n                  <Select name=\"status\" defaultValue={status} required>\r\n                     <MenuItem value=\"client\">Клиент</MenuItem>\r\n                     <MenuItem value=\"admin\">Администратор</MenuItem>\r\n                     <MenuItem value=\"partner\">Партнер</MenuItem>\r\n                  </Select>\r\n                  <Button\r\n                     variant=\"contained\"\r\n                     color=\"primary\"\r\n                     className={classes.buttonSave}\r\n                     startIcon={<SaveIcon />}\r\n                     type='submit'\r\n                  >\r\n                     Save\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={() => setEditMode(false)}>Отмена</Button>\r\n               </form>\r\n            }\r\n         </CardContent>\r\n      </Card>\r\n   )\r\n}\r\n","import React, { useState } from 'react'\r\nimport FormAddUser from './components/FormAddUser/FormAddUser';\r\nimport User from './components/User/User';\r\nimport './App.css'\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { AppBar, Toolbar, Typography, InputBase, Container, InputLabel, MenuItem, Select, FormControl, FormHelperText, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      flexGrow: 1,\r\n      marginBottom: 10,\r\n   },\r\n   title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n         display: 'block',\r\n      },\r\n   },\r\n   search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n         backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n         marginLeft: theme.spacing(1),\r\n         width: 'auto',\r\n      },\r\n   },\r\n   searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 2,\r\n   },\r\n   inputRoot: {\r\n      color: 'inherit',\r\n   },\r\n   inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      paddingRight: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      textOverflow: 'ellipsis',\r\n      [theme.breakpoints.up('sm')]: {\r\n         width: '30ch',\r\n         // '&:focus': {\r\n         //    width: '30ch',\r\n         // },\r\n      },\r\n   },\r\n   selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n   btnAddUser: {\r\n      height: 55,\r\n      margin: theme.spacing(1),\r\n   }\r\n}));\r\n\r\n\r\nfunction App() {\r\n   const getUserList = JSON.parse(localStorage.getItem('users') || '[]')\r\n   const [userList, setUserList] = useState(getUserList)\r\n   const [viewAddUserForm, setViewAddUserForm] = useState(false)\r\n   const [status, setStatus] = React.useState('');\r\n\r\n   const filterByStatus = (e) => {\r\n      const statusValue = e.target.value\r\n      setStatus(statusValue);\r\n      if (statusValue !== 'all') {\r\n         const usersFilter = getUserList.filter(user => user.status === statusValue)\r\n         setUserList(usersFilter)\r\n      } else {\r\n         setUserList(getUserList)\r\n      }\r\n   }\r\n   const searchForEmailOrPhone = () => {\r\n      const search = document.getElementById('site-search')\r\n      if (search.value !== '') {\r\n         const usersSearch = getUserList.filter(user => search.value === user.email || search.value === user.telephone)\r\n         setUserList(usersSearch)\r\n      } else {\r\n         setUserList(getUserList)\r\n      }\r\n   }\r\n\r\n   const clearSearchField = () => {\r\n      debugger\r\n      document.getElementById('site-search').value = ''\r\n      setUserList(getUserList)\r\n   }\r\n\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Container maxWidth=\"lg\">\r\n         <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n               <Toolbar>\r\n                  <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                     Admin panel\r\n                  </Typography>\r\n                  <div className={classes.search} >\r\n                     <div className={classes.searchIcon} onClick={searchForEmailOrPhone}>\r\n                        <SearchIcon />\r\n                     </div>\r\n                     <InputBase id=\"site-search\"\r\n                        placeholder=\"Поиск по email или телефону\"\r\n                        classes={{\r\n                           root: classes.inputRoot,\r\n                           input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                     />\r\n                  </div>\r\n               </Toolbar>\r\n            </AppBar>\r\n         </div>\r\n         <div className='top'>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n               <InputLabel id=\"demo-simple-select-outlined-label\">Статус</InputLabel>\r\n               <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={status}\r\n                  onChange={filterByStatus}\r\n                  label=\"Статус\"\r\n               >\r\n                  <MenuItem value=\"all\">Все</MenuItem>\r\n                  <MenuItem value='client'>Клиент</MenuItem>\r\n                  <MenuItem value='admin'>Администратор</MenuItem>\r\n                  <MenuItem value='partner'>Партнер</MenuItem>\r\n               </Select>\r\n               <FormHelperText>Отфильтровать по статусу</FormHelperText>\r\n            </FormControl>\r\n            <Button variant=\"outlined\"\r\n               className={classes.btnAddUser}\r\n               size=\"small\"\r\n               color=\"primary\"\r\n               onClick={() => setViewAddUserForm(!viewAddUserForm)}>Добавить пользователя\r\n            </Button>\r\n         </div>\r\n         <div className=\"form\">\r\n            {\r\n               viewAddUserForm && <FormAddUser\r\n                  userList={userList}\r\n                  setUserList={(users) => setUserList(users)}\r\n                  setViewAddUserForm={() => setViewAddUserForm(false)}\r\n               />\r\n            }\r\n         </div>\r\n         <div className='users-block'>\r\n            {\r\n               userList && userList.map(user => <User\r\n                  key={user.id}\r\n                  username={user.username}\r\n                  telephone={user.telephone}\r\n                  status={user.status}\r\n                  email={user.email}\r\n                  id={user.id}\r\n                  setUserList={(users) => setUserList(users)} />)\r\n            }\r\n         </div>\r\n      </Container>\r\n   );\r\n\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}