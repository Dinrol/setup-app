{"version":3,"sources":["components/FormAddUser/FormAddUser.jsx","components/User/User.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["FormAddUser","setUserList","userList","useState","length","id","userId","setuserId","onSubmit","event","formData","FormData","target","JSON","parse","localStorage","getItem","userObj","preventDefault","entries","entry","push","setItem","stringify","reset","type","name","value","Date","htmlFor","required","placeholder","className","User","username","email","status","telephone","editModeUserName","setEditModeUserName","editModeEmail","setEditModeEmail","editModeStatus","setEditModeStatus","editModePhone","setEditModePhone","onChangeData","e","users","forEach","user","currentTarget","lastEdit","defaultValue","autoFocus","onBlur","onDoubleClick","onClick","index","splice","App","getUserList","userListView","setUserListView","addUserForm","setAddUserForm","statusValue","document","getElementById","usersFilter","filter","hmtlfor","searchValue","usersSearch","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.bacfed7b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './form-style.css';\r\n\r\n\r\nexport default function FormAddUser({ setUserList, userList }) {\r\n\r\n   const [userId, setuserId] = useState(userList.length ? +userList[userList.length - 1].id + 1 : 0)\r\n   function handleSubmit(event) {\r\n      const formData = new FormData(event.target)\r\n      const userList = JSON.parse(localStorage.getItem('users') || '[]')\r\n      const userObj = {}\r\n\r\n      event.preventDefault()\r\n\r\n      for (let entry of formData.entries()) {\r\n         if (entry[0] === 'id' && userId === 0) {\r\n            setuserId(userId + 1)\r\n         }\r\n         userObj[entry[0]] = entry[1]\r\n         setuserId(userId + 1)\r\n      }\r\n\r\n      userList.push(userObj)\r\n      localStorage.setItem(\"users\", JSON.stringify(userList))\r\n      setUserList(userList)\r\n      event.target.reset()\r\n   }\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n\r\n         <input type=\"hidden\" name=\"id\" value={userId} />\r\n         <input type=\"hidden\" name=\"date\" value={new Date()} />\r\n\r\n         <label htmlFor=\"username\"> Введите имя пользователя: </label>\r\n         <input id=\"username\" name=\"username\" type=\"text\" required />\r\n         <br />\r\n         <label htmlFor=\"email\"> Введите email: </label>\r\n         <input id=\"email\" name=\"email\" type=\"email\" required />\r\n         <br />\r\n         <label htmlFor=\"password\"> Введите пароль: </label>\r\n         <input id=\"password\" name=\"password\" type=\"password\" required />\r\n         <br />\r\n         <label htmlFor=\"telephone\"> Введите номер телефона: </label>\r\n         <input id=\"telephone\" name=\"telephone\" type=\"tel\" placeholder=\"+7(999) 999-9999\" required />\r\n         <br />\r\n         <label> Выберите статус: </label>\r\n         <select name=\"status\">\r\n            <option value=\"client\">Клиент</option>\r\n            <option value=\"admin\">Администратор</option>\r\n            <option value=\"partner\">Партнер</option>\r\n         </select>\r\n         <br />\r\n         <button className=\"btn-main\">\r\n            Send\r\n         </button>\r\n      </form >\r\n   )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './user-style.css'\r\n\r\nexport default function User({ username, email, status, telephone, id, setUserList }) {\r\n   const [editModeUserName, setEditModeUserName] = useState(false)\r\n   const [editModeEmail, setEditModeEmail] = useState(false)\r\n   const [editModeStatus, setEditModeStatus] = useState(false)\r\n   const [editModePhone, setEditModePhone] = useState(false)\r\n\r\n   const onChangeData = (e) => {\r\n      const users = JSON.parse(localStorage.getItem('users') || '[]')\r\n      users.forEach(user => {\r\n         if (id === user.id) {\r\n            switch (true) {\r\n               case editModeUserName:\r\n                  user.username = e.currentTarget.value\r\n                  user.lastEdit = new Date()\r\n                  setEditModeUserName(false)\r\n                  break\r\n               case editModeEmail:\r\n                  user.email = e.currentTarget.value\r\n                  setEditModeEmail(false)\r\n                  user.lastEdit = new Date()\r\n                  break\r\n               case editModeStatus:\r\n                  user.status = e.currentTarget.value\r\n                  setEditModeStatus(false)\r\n                  user.lastEdit = new Date()\r\n                  break\r\n               case editModePhone:\r\n                  user.telephone = e.currentTarget.value\r\n                  setEditModePhone(false)\r\n                  user.lastEdit = new Date()\r\n                  break\r\n               default:\r\n                  break;\r\n            }\r\n\r\n         }\r\n      });\r\n      localStorage.setItem(\"users\", JSON.stringify(users))\r\n      setUserList(users)\r\n\r\n   }\r\n\r\n   const removeUser = () => {\r\n      const users = JSON.parse(localStorage.getItem('users') || '[]')\r\n      users.forEach((user, index) => {\r\n         if (id === user.id) {\r\n            users.splice(index, 1)\r\n         }\r\n      });\r\n      localStorage.setItem(\"users\", JSON.stringify(users))\r\n      setUserList(users)\r\n   }\r\n\r\n   return (\r\n      <div className='user-cart'>\r\n         {\r\n            editModeUserName\r\n               ? <input type=\"text\" defaultValue={username} placeholder='Имя пользователя' autoFocus={true} onBlur={(e) => onChangeData(e)} />\r\n               : <span onDoubleClick={() => setEditModeUserName(true)}>Имя пользователя: {username}</span>\r\n         }\r\n         <br />\r\n         {\r\n            editModeEmail\r\n               ? <input type=\"email\" defaultValue={email} placeholder='Email' autoFocus={true} onBlur={(e) => onChangeData(e)} />\r\n               : <span onDoubleClick={() => setEditModeEmail(true)}>Email: {email}</span>\r\n         }\r\n         <br />\r\n         {\r\n            editModeStatus\r\n               ? <select defaultValue={status} name=\"status\" onBlur={(e) => onChangeData(e)} >\r\n                  <option value=\"client\">Клиент</option>\r\n                  <option value=\"admin\">Администратор</option>\r\n                  <option value=\"partner\">Партнер</option>\r\n               </select>\r\n               : <span onDoubleClick={() => setEditModeStatus(true)}>Статус: {status}</span>\r\n         }\r\n         <br />\r\n         {\r\n            editModePhone\r\n               ? <input defaultValue={telephone} type=\"tel\" placeholder=\"+7(999) 999-9999\" autoFocus={true} onBlur={(e) => onChangeData(e)} />\r\n               : <span onDoubleClick={() => setEditModePhone(true)}>Телефон: {telephone}</span>\r\n         }\r\n         <br />\r\n         <br />\r\n         <button onClick={removeUser}>Удалить пользователя</button>\r\n      </div>\r\n   )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport FormAddUser from './components/FormAddUser/FormAddUser';\r\nimport User from './components/User/User';\r\nimport './App.css'\r\n\r\nfunction App() {\r\n   const getUserList = JSON.parse(localStorage.getItem('users') || '[]')\r\n   const [userList, setUserList] = useState(getUserList)\r\n   const [userListView, setUserListView] = useState(false)\r\n   const [addUserForm, setAddUserForm] = useState(false)\r\n\r\n   const filterByStatus = () => {\r\n      const statusValue = document.getElementById('status_').value\r\n      if (statusValue !== 'all') {\r\n         const usersFilter = getUserList.filter(user => user.status === statusValue)\r\n         setUserList(usersFilter)\r\n      } else {\r\n         setUserList(getUserList)\r\n      }\r\n   }\r\n   const searchForEmailOrPhone = () => {\r\n      const searchValue = document.getElementById('site-search').value\r\n      const usersSearch = []\r\n      getUserList.forEach(user => {\r\n         if (searchValue === user.email || searchValue === user.telephone) {\r\n            usersSearch.push(user)\r\n         }\r\n      })\r\n      setUserList(usersSearch)\r\n   }\r\n\r\n   return (\r\n      <div className='container'>\r\n         <div className='top'>\r\n            <div className=\"btn-main\" onClick={() => setUserListView(!userListView)}>Список пользователей</div>\r\n            {\r\n               userListView &&\r\n               <>\r\n                  <div className=\"btn-main\" onClick={filterByStatus}>Фильтр по статусу\r\n                  <select id=\"status_\">\r\n                        <option value='all'>Показать всех</option>\r\n                        <option value=\"client\">Клиент</option>\r\n                        <option value=\"admin\">Администратор</option>\r\n                        <option value=\"partner\">Партнер</option>\r\n                     </select>\r\n                  </div>\r\n                  <div className=\"btn-main\" >\r\n                     <label hmtlfor=\"site-search\">Поиск по email или телефону</label>\r\n                     <input type=\"search\" id=\"site-search\" />\r\n                     <button onClick={searchForEmailOrPhone}>Search</button>\r\n                  </div>\r\n               </>\r\n            }\r\n            <div className=\"btn-main\" onClick={() => setAddUserForm(!addUserForm)}>Добавить пользователя</div>\r\n         </div>\r\n         <div className=\"form\">\r\n            {\r\n               addUserForm && <FormAddUser\r\n                  userList={userList}\r\n                  setUserList={(users) => setUserList(users)}\r\n               />\r\n            }\r\n         </div>\r\n         <div className='users-block'>\r\n            {\r\n               userListView &&\r\n               userList && userList.map(user => <User\r\n                  key={user.id}\r\n                  username={user.username}\r\n                  telephone={user.telephone}\r\n                  status={user.status}\r\n                  email={user.email}\r\n                  id={user.id}\r\n                  setUserList={(users) => setUserList(users)} />)\r\n            }\r\n         </div>\r\n      </div>\r\n   );\r\n\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}